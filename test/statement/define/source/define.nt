define no-type-ascription(): _ {
  Unit
}

define hole-in-ascription(): _ {
  Unit
}

define complex-term-in-ascription(): {
  let _: tau = tau in
  unit
} {
  Unit
}

define imp-0-exp-0(): tau {
  tau
}

define imp-0-exp-1(_: tau): tau {
  tau
}

define i(): tau {
  tau
}

define but-what-after-all-is-one-night-A-short-space-especially-when-the-darkness-dims-so-soon-and-so-soon-a-bird-sings-a-cock-crows-or-a-faint-green-quickens-like-a-turning-leaf-in-the-hollows-of-the-wave-Night-however-succeeds-to-night-The-winter-holds-a-pack-of-them-in-store-and-deals-them-equally-evenly-with-indefatigable-fingers-They-lengthen-they-darken-Some-of-them-hold-aloft-clear-planets-plates-of-brightness-The-autumn-trees-ravaged-as-they-are-take-on-the-flesh-of-tattered-flags-kindling-in-the-doom-of-cool-cathedral-caves-where-gold-letters-on-marble-pages-describe-death-in-battle-and-how-bones-bleach-and-burn-far-away-in-Indian-sands-The-autumn-trees-gleam-in-the-yellow-moonlight-in-the-light-of-harvest-moons-the-light-which-mellows-the-energy-of-labour-and-smooths-the-stubble-and-brings-the-wave-lapping-blue-to-the-shore(): tau {
  tau
}

define ♥️a🌟あ🌕α$-$`~!?@#%^&+|\_(): tau {
  tau
}

nominal {
- is-odd(x: int): int
}

define is-even(x: int): int {
  if eq-int(x, 0) {
    2
  } else {
    is-odd(sub-int(x, 1))
  }
}

define is-odd(x: int): int {
  if eq-int(x, 0) {
    1
  } else {
    is-even(sub-int(x, 1))
  }
}

define implicit-0(a: tau, x: a): a {
  x
}

define implicit-1<a>(x: a): a {
  x
}

define implicit-2<a, b>(x: a, y: b): pair(a, b) {
  Pair(x, y)
}

define main(): unit {
  let _ = is-even(12345) in
  let _ = implicit-0(&text, "hello") in
  let _ = implicit-1("hello") in
  let _ = implicit-2("hello", tau) in
  let local-func-with-imp-args =
    function <a>(x: a) {
      x
    }
  in
  local-func-with-imp-args(Unit)
}
