data my-void {}

data data-Z-cons-Z {
- FooZZ
- BarZZ
}

data data-Z-cons-0 {
- FooZ0()
- BarZ0()
}

data data-Z-cons-1 {
- FooZ1(int)
- BarZ1(bool)
}

data data-0-cons-Z() {
- Foo0Z
- Bar0Z
}

data data-0-cons-0() {
- Foo00()
- Bar00()
}

data data-0-cons-1() {
- Foo01(int)
- Bar01(bool)
}

data data-1-cons-Z(_: tau) {
- Foo1Z
- Bar1Z
}

data data-1-cons-0(_: tau) {
- Foo10()
- Bar10()
}

data data-1-cons-1(_: tau) {
- Foo11(int)
- Bar11(bool)
}

data simple(a: tau) {
- New(a)
}

data empty {
- Empty()
}

data config {
- Config(
    counter: int,
    path: *text,
    func: int -> int
  )
}

data top {
- Top(a: tau, x: a)
}

define yo(x: top): unit {
  let Top(_, _) = x in
  Unit
}

define foo(c: *config): *text {
  tie Config(..) = c in
  let _: int = !counter in
  let _ = !counter in
  let _ = {!func}(3) in
  let _ = !func in
  !path
}

define main(): unit {
  Unit
}
