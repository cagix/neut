import {}

data nat {
- Zero
- Succ(nat)
}

define interpret(n: nat): int {
  match n {
  - Zero =>
    0
  - Succ(m) =>
    add-int(1, interpret(m))
  }
}

define nat-list-sum(xs: list(nat)): int {
  match xs {
  - Nil =>
    0
  - Cons(y, ys) =>
    add-int(interpret(y), nat-list-sum(ys))
  }
}


define main(): unit {
  print-int(nat-list-sum(Cons(Succ(Zero), Cons(Succ(Zero), Nil))));
  print("\n")
}
