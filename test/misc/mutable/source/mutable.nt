import {
  core.cell {borrow, cell, mutate},
  core.list {length},
  core.text.io {print-int},
}

define bar(xs-cell: &cell(list(int))): unit {
  borrow(xs-cell, function (xs) {
    let len = length(xs) in
    print-int(len);
    print("\n")
  })
}

define main(): unit {
  let xs: list(int) = Cons(1, Cons(2, Nil)) in
  let xs-cell = new-cell(xs) in
  let _ on xs-cell =
    let _ = bar(xs-cell) in
    mutate(xs-cell, function (xs) {
      Cons(4, xs)
    });
    let _ = bar(xs-cell) in
    mutate(xs-cell, function (_) {
      Nil
    });
    mutate(xs-cell, function (xs) {
      Cons(4, xs)
    });
    bar(xs-cell)
  in
  let _ = xs-cell in
  Unit
}
