define nop(): unit {
  Unit
}

define either-bind<e, a, b>(x: either(e, a), k: (a) -> either(e, b)): either(e, b) {
  match x {
  | Left(err) =>
    Left(err)
  | Right(value) =>
    k(value)
  }
}

define test(): either(&text, int) {
  with either-bind {
    bind _: bool = Left("hello") in
    let _ = tau in
    bind _: bool = Left("hello") in
    let _ = tau in
    bind _: bool = Right(True) in
    nop();
    bind _: bool =
      bind _: bool = Right(True) in
      nop();
      let _ = tau in
      Left("hello")
    in
    bind _: bool = Left("hello") in
    bind _: bool = Left("hello") in
    nop();
    bind _: tau = Right(int) in
    Right(10)
  }
}

define main(): unit {
  let _ = test() in
  Unit
}
