define test-syntax(): unit {
  let _ = int1;
  let _ = int2;
  let _ = int4;
  let _ = int8;
  let _ = int16;
  let _ = int32;
  let _ = int64;
  let _ = int;
  let _ = float16;
  let _ = float32;
  let _ = float64;
  let _ = float;
  let _: int = 3;
  let _: int = 0b1100;
  let _: int = 0b_1100_0010_0000;
  let _: int = 0o1234567;
  let _: int = 0o123_456_7;
  let _: int = 0o__123_456_7;
  let _: int = 0x0123456789abcdef;
  let _: int = 0x_0123_456_789_abc_def;
  let _: int = 0x__01234__56789_abc___def;
  let _: float = 3.0;
  Unit
}

define test-op(): unit {
  let _ = add-int(50, 24);
  let _ = sub-int(50, 24);
  let _ = mul-int(50, 24);
  let _ = div-int(50, 24);
  let _ = rem-int(50, 24);
  let _ = udiv-int(50, 8);
  let _ = urem-int(50, 8);
  let _ = and-int(50, 24);
  let _ = or-int(50, 24);
  let _ = xor-int(50, 24);
  let _ = shl-int(50, 1);
  let _ = lshr-int(50, 1);
  let _ = ashr-int(50, 1);
  let _ = eq-int(50, 8);
  let _ = ne-int(50, 8);
  let _ = lt-int(50, 8);
  let _ = le-int(50, 8);
  let _ = gt-int(50, 8);
  let _ = ge-int(50, 8);
  let _ = ult-int(50, 8);
  let _ = ule-int(50, 8);
  let _ = ugt-int(50, 8);
  let _ = uge-int(50, 8);
  let _ = neg-float(1.3);
  let _ = add-float(1.3, 2.0);
  let _ = sub-float(1.3, 2.0);
  let _ = mul-float(1.3, 2.0);
  let _ = div-float(1.3, 2.0);
  let _ = rem-float(1.3, 2.0);
  let _ = eq-float(1.3, 2.0);
  let _ = ne-float(1.3, 2.0);
  let _ = gt-float(1.3, 2.0);
  let _ = ge-float(1.3, 2.0);
  let _ = lt-float(1.3, 2.0);
  let _ = le-float(1.3, 2.0);
  let _ = ueq-float(1.3, 2.0);
  let _ = une-float(1.3, 2.0);
  let _ = ugt-float(1.3, 2.0);
  let _ = uge-float(1.3, 2.0);
  let _ = ult-float(1.3, 2.0);
  let _ = ule-float(1.3, 2.0);
  let _ = ord-float(1.3, 2.0);
  let _ = uno-float(1.3, 2.0);
  let _ = true-float(1.3, 2.0);
  let _ = false-float(1.3, 2.0);
  let _ = trunc-int64-int32(1234);
  let _ = zext-int32-int64(1234);
  let _ = sext-int32-int64(1234);
  let _ = fptrunc-float64-float32(1.4142);
  let _ = fpext-float32-float64(1.4142);
  let _ = fptoui-float-int(3.8);
  let _ = fptosi-float-int(3.8);
  let _ = uitofp-int-float(1234);
  let _ = sitofp-int-float(1234);
  Unit
}

define opaque(a: type, x: a): a {
  x
}

define test-string(): unit {
  let _ = opaque(_, "");
  let _ = opaque(_, "test");
  let _ = opaque(_, "🌟あ♥️a🌕亜\n\u{33}\u{333}\u{1f338}\0\t\n\r\"\\\`");
  Unit
}

define main(): unit {
  test-syntax();
  test-op();
  test-string()
}
