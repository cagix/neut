use {
- this.merge-lists::list
}

data list(a: tau) {
- nil()
- cons(a, list(a))
}

define merge(a: tau, xs: list(a), ys: list(a)): list(a) {
  match xs, ys {
  - nil(), ys =>
    ys
  - xs, nil() =>
    xs
  - cons(x, rx), ys =>
    cons(x, merge(a, rx, ys))
  }
}

define length<a>(xs: list(a)): i64 {
  match xs {
  - list.nil() =>
    0
  - list.cons(y, ys) =>
    add-i64(1, length(ys))
  }
}

define main(): i64 {
  let xs = cons(1, cons(2, nil()))
  let ys = cons(3, cons(4, cons(5, nil())))
  let zs = merge(i64, xs, ys)
  length(zs)
}
