// export-variant.nt

import {
- this.api => L
- this.private
}

define do-something(): tau {
  L.some-function(Foo-Alias)
}

define k(): L.my-sample-alias {
  Bar(3)
  // L.Foo-Alias
}

define do-next(): this.private.sample-2(tau) {
  Foo2
}

struct config by Config {
- sample: i64
- test: L.my-sample-alias
}

variant hogehoge {
- Pohe
- Hoge(i64)
}

define main(): i64 {
  let _ = L.my-sample-alias
  let _ = Bar
  // match L.Foo2: L.sample-2(tau) {
  // }
  0
  // let _ = L.Foo2
  // 0
}

export {
- config {
  - test
  - Config
  }
}
