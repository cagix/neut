variant nat {
- Zero
- Succ(nat)
}

define eq-nat(n1: nat, n2: nat): int {
  match n1, n2 {
  - Zero, Zero =>
    1
  - Succ(_), Succ(_) =>
    2
  - _, _ =>
    0
  }
}

define main(): int {
  let _ = eq-nat(Zero, Zero)
  0
}
