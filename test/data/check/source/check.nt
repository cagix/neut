variant nat {
- Zero()
- Succ(nat)
}

define nil-cons-cons(xs: nat): i64 {
  match xs {
  - Zero() =>
    1
  - Succ(Succ(cs)) =>
    2
  - Succ(c) =>
    3
  }
}

define main(): i64 {
  let n0 = Zero()
  let n1 = Succ(n0)
  let n2 = Succ(Succ(Zero()))
  let z0 = nil-cons-cons(n0)
  let z1 = nil-cons-cons(n1)
  let z2 = nil-cons-cons(n2)
  add-i64(z0, add-i64(z1, z2))
}
