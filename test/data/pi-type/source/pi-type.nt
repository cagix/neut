define foo(f: int -> &int -> int): int {
  let x = 3
  let result on x =
    f(!x)(x)
  let _ = x
  result
}

define bar0(f: (int, &int) -> int): int {
  let x = 3
  let result on x =
    f(!x, x)
  let _ = x
  result
}

define bar1(f: (_: int, &int) -> int): int {
  let x = 3
  let result on x =
    f(!x, x)
  let _ = x
  result
}

define bar2(f: (int, _: &int) -> int): int {
  let x = 3
  let result on x =
    f(!x, x)
  let _ = x
  result
}

define bar3(f: (_: int, _: &int) -> int): int {
  let x = 3
  let result on x =
    f(!x, x)
  let _ = x
  result
}

define main(): int {
  0
}
