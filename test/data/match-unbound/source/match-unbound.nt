import {
- core.bool
}

use {
- this.match-unbound::nat
}

enum nat() {
- zero()
}

define cond(n1: nat()): core.bool::bool() {
  core.bool::bool.false()
}

define f(): nat() {
  let x = zero()
  if cond(x) {
    zero()
  } else {
    let _ = x
    x
  }
}

define main(): i64 {
  let a = f()
  0
}
